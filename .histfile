ls
nvim water_consumption
nvim water_consumption.csv
pacman -Syu
nmtui
cd projects
ls
cd rust-mysql
ls
rm water_consumption_updated.csv 
nvim todos
mv todos README.md
ls
cd ..
ls
git clone https://github.com/k3lp3r-sh/sql-rust.git
mv rust-mysql/* sql-rust
cd sql-rust
ls
cargo run
nvim src/main.rs
cargo run
nmtui
ls
git add .
git commit -m "init comit"
ls
s
ls
cd ..
ls
cd sql-rust
git push
cd projects
ls
ll
la
cd  '. .
cd  . .
cd  .\ .
ls
cd lust-list
ls
cd ..
ls
cd ..
ls
la
cd Java-III
ls
la
cd .
ls -a
cd ..
ls
cd groceries
ls
la
nvim .gitignore
cd target
ls
cd ,,
cd ..
ls
cd Java-III
ls
cd tar
history
cd
ls
la
nvim .rnd
cd .gitconfig
nvim .gitconfig
git push
github_remote_key = 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
clear
git push
cd projects
ls
cd rust-mysql
ls
cd ..
rmdir rust-mysql
rm -rf rust-mysql
cd sql-rust
ll
flameshot gui
reboot
startx
cd projects
ls
cd sql-rust
ls
nvim water_consumption.csv
cd projects
ls
cd sql
cd sql-rust
nvim src/main.rs
cargo run
mysql -u kelper -p
cargo fix --bin "rust-mysql"
startx
brightnessctl
brightnessctl set 96000
brightnessctl set 1
q
cal 2023
cal 11 2023
cal 2023
cal 2023 12
cal 12 2023
flameshot gui
mysql -u kelper -p
cd projects
ls
cd sql
cd sql-rust
ls
cd projects
cd sql-rust
ls
rm water_consumption.csv
nivm apartment_meter.csv
nvim apartment_meter.csv
nvim meter_data.csv
startx
cd projects/sql-rust
clear
ls
rm data.csv
ls
cargo run
clear
git add .
cd projects
cd sql-rust
cd projects/sql-rust
cleaer
mysql -u kelper -p
nvim staffDetails.csv
python
/bin/python /home/kelper/projects/sql-rust/cov.py
/bin/python /home/kelper/projects/sql-rust/meter_data.py
/bin/python
/bin/python /home/kelper/projects/sql-rust/payment_data.py
flameshot gui
python
/bin/python /home/kelper/projects/sql-rust/payment_data.py
flameshot gui
git add .
git commit -m "generated datasets"
git push
l
L
la
git status
nvim
startx
mysql -u kelper -p
python
mysql -u kelper -p
clea
clear
cd Rust-lrng
ls
nvim struct-new
cd struct-new
ls
nvim src/main.rs
cargo run
tree
nvim
ls
rm untitled untitled.rust
nvim untitled.rs
nvim
python test.py
nmtui
cargo run
python
flameshot gui
reboot
startx
mysql -u kelper -p
nmtui
mysql -u kelper -p
cargo run
mysql -u kelper -p
nmtui
mysql -u kelper -p
flameshot gui
python
yay -S deskreen
mv Downloads/Deskreen-2.0.4.AppImage ~/
ls
./Deskreen-2.0.4.AppImage
chmod +x Deskreen-2.0.4.AppImage
./Deskreen-2.0.4.AppImage
python
flameshot gui
python
cargo run
mysql -u kelper -p
nvim new
btop
nmtui
ls
cd /etc/polybar
nvim config.ini
sudo nvim config.ini
pkill polyabr
pkill polybar
cd
sh .auto.sh
cargo run
nmtui
btop
cargo run
opam init
opem install depext
opam install depext
opam -v
opam --version
opam depext frama-c
Y
opam install frama-c
why3 config --detect
opam install --deps-only frama-c
opam update
opam upgrade
opam init --disable-sandboxing\

sudo pacman -Syu git m4 perl pkg-config autoconf make gpatch\

[200~sudo pacman -Syu git m4 perl pkg-config autoconf make patch
~sudo pacman -Syu git m4 perl pkg-config autoconf make patch\

sudo pacman -Syu m4 perl pkg-config autoconf make patch\

opam install ocamlfind ocamlbuild ocaml-num menhir ocaml-compiler-libs yojson ocamlgraph batteries cil\

opam install ocamlfind ocamlbuild menhir ocaml-compiler-libs yojson ocamlgraph batteries cil\

opam repo add frama-c https://github.com/Frama-C/opam-fc-repository.git
git clone https://github.com/Frama-C/Frama-C.git\

eval $(opam env)
opam install frama-c
frama-c
frama-c gui
sudo pacman -Syu gtk2 lablgtk\

opam install frama-c-gui\

frama-c -v
frama-c-gui
frama-c gui
opam list -a
opam list -a | grep gui
opam list -a | grep frama
frama-c-gui
frama-c -v
opam update
opam install conf-gtksourceview
sudo apt-get install libgtksourceview2.0-0\

sudo pacman -S gtksourceview2
sudo pacman -S gtksourceview
opam install gtksourceview2
opam install conf-gtksourceview2
sudo pacman -Ss gtksourceview\

sudo pacman -S gtksourceview3\

sudo pacman -S gtksourceview2\

opam install conf-gtksourceview.2
opam install conf-gtksourceview --no-depexts
opam install lablgtk2
pacman -S lablgtk2
opam install conf-gtksourceview
opam update
cd Downloads
mv frama-c-27.1-Cobalt.tar.gz ~/
cd
clear
mkdir frama-c
ls
mv frama-c-27.1-Cobalt.tar.gz frama-c/
cd frama-c
ls
gunzip frama-c-27.1-Cobalt.tar.gz
ls
tar -xvf frama-c-27.1-Cobalt.tar
ls
cd frama-c-27.1-Cobalt
ls
make install
opam uninstall frama-c
frama-c
make install
ls
nvim README.md
nvim INSTALL.md
ls
cd
ls
cd frama-c/frama-c-27.1-Cobalt
ls
make 
sudo make
sudo make clean install
frama-c
cd ..
ls
opam install zarith lablgtk conf-gtksourceview conf-gnomecanvas
opam pin add frama-c-base
cd 
opam pin add frama-c-base frama-c/frama-c-27.1-Cobalt
rsync -v
rsync --version
pacman -S rsync
opam pin add frama-c-base frama-c/frama-c-27.1-Cobalt
frama-c
opam install frama-c
frama-c
frama-c gui
ivette
nvm use 16
npm install --global yarm
npm install --global yarn
sudo npm install --global yarn
ivette
frama-c-gui
cd clg/PR/framac
frama-c-gui prg1.c
brightnessctl 
brightnessctl set 40%
kel
nmtui
ls
cd DaVinci
ls
ll
./DaVinci_Resolve_18.6.3_Linux.run -i
sudo ./DaVinci_Resolve_18.6.3_Linux.run -i
frama-c-gui prg1.c
gcc prg1.c
frama-c-gui prg1.c
cd clg/PR/framac
ls
frama-c-gui prg1.c
ls
frama-c-gui prg1.c
gcc prg1.c
frama-c-gui prg1.c
gcc prg1.c
frama-c-gui prg1.c
frama-c-gui -wp -wp-rte prg1.c
nmtui
python
sleep (2) && flameshot gui
sleep 2 && flameshot gui
frama-c-gui eval1.c
gcc eval1.c
frama-c-gui eval1.c
gcc eval1.c
./a.out
gcc eval1.c
./a.out
gcc eval1.c
./a.out
frama-c-gui eval1.c
frama-c-gui eval1_.c
frama-c-gui eval1.c
nmtui
frama-c-gui eval1.c
frama-c-gui eval1_.c
flameshot gui
startx
frama-c-gui eval1_.c
flameshot gui
fg
frama-c-gui eval2.c
flameshot gui
startx
cd config
cd .config
ls
shutdown now
startx
reboot
startx
nmtui
reboot
startx
flameshot gui
tradingview
flameshot gui
cd Rust-lrng
cargo new funcitons-test
\cd funcitons-test
ls
nvim src/main.rs
cargo run
nvim src/main.rs
cargo run
mysql -u kelper -p
cargo run
cargo run\ 
cargo run
mysql -u kelper -p
cargo run
git add .
git commit -m "all DB processing without utils and code cleanups"
git push
startx
nmtui
python
nmtui
python
NetworkManager
NetworkManager -h
nm-applet
nm-connection-editor
nmtui
pacman -Syu
aom
nmtui
python
flameshot gui
python
reboot
startx
flameshot gui
python
reboot
startx
python
flameshot gui
nmtui
sleep 2 && flameshot gui
python
nmtui
./Obsidian-1.4.14.AppImage
nmtui
python
sleep 2 && flameshot gui
nmtui
startx
brightnessctl set 60%
redshift -P -O 6000
redshift -P -O 9000
redshift -P -O 1000
redshift -P -O 4000
redshift -P -O 4500
redshift -P -O 5000
redshift -P -O 3000
python
.reds.sh
nvim .reds.sh
./.reds.sh
sh .reds.sh
nvim .reds.sh
sh .reds.sh
redshift -P -O 3000
nvim .reds.sh
sh .reds.sh
nvim .reds.sh
sh .reds.sh
nvim .reds.sh
sh .reds.sh
python
startx
reboot
startx
brightnessctl set 10%
ls
cd Do
cd Downloads
ls
cd ..
ls
cd DynamoDB
ls
cd ~/Downloads
ls
mv dynamodb_local_latest.tar.gz ~/DynamoDB
cd ../DynamoDB
ls
java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
ls
gunzip dynamodb_local_latest.tar.gz
ls
tar -xvf dynamodb_local_latest.tar
ls
java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
aws configure
aws dynamodb list-tables --endpoint-url http://localhost:8000
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --table-class STANDARD
aws dynamodb list-tables --endpoint-url http://localhost:8000
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --table-class STANDARD
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws configure
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --table-class STANDARD
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

flameshot gui
aws dynamodb create-table \\
    --table-name PanCard \\
    --attribute-definitions \\
        AttributeName=PanNumber,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

nvim
./Obsidian-1.4.14.AppImage
aws dynamodb create-table \\
    --table-name PanCard \\
    --attribute-definitions \\
        AttributeName=PanNumber,AttributeType=S \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Address,AttributeType=S \\
        AttributeName=IssueDate,AttributeType=S \\
        AttributeName=ExpiryDate,AttributeType=S \\
    --key-schema \\
        AttributeName=PanNumber,KeyType=HASH \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws dynamodb create-table \\
    --table-name PanCard \\
    --attribute-definitions \\
        AttributeName=PanNumber,AttributeType=S \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Address,AttributeType=S \\
        AttributeName=IssueDate,AttributeType=N \\
        AttributeName=ExpiryDate,AttributeType=N \\
    --key-schema \\
        AttributeName=PanNumber,KeyType=HASH \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws dynamodb create-table \
\
--table-name PanCard \
\
--attribute-definitions AttributeDefinitions='[{"AttributeName":"PanNumber","AttributeType":"S"},{"AttributeName":"Name","AttributeType":"S"},{"AttributeName":"Address","AttributeType":"S"},{"AttributeName":"IssueDate","AttributeType":"N"},{"AttributeName":"ExpiryDate","AttributeType":"N"}]' \
\
--key-schema KeySchema='[{"AttributeName":"PanNumber","KeyType":"HASH"}]' \
\
--provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
\
--region ap-south-1 \
\
--table-class STANDARD
aws dynamodb create-table \\
    --table-name PanCard \\
    --attribute-definitions \\
        AttributeName=PanNumber,AttributeType=S \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Address,AttributeType=S \\
        AttributeName=IssueDate,AttributeType=S \\
        AttributeName=ExpiryDate,AttributeType=S \\
    --key-schema \\
        AttributeName=PanNumber,KeyType=HASH \
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws dynamodb list-tables --endpoint-url http://localhost:8000
aws dynamodb create-table \\
    --table-name PanCard \\
    --attribute-definitions \\
        AttributeName=PanNumber,AttributeType=S \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Address,AttributeType=S \\
        AttributeName=IssueDate,AttributeType=S \\
        AttributeName=ExpiryDate,AttributeType=S \\
    --key-schema \\
        AttributeName=PanNumber,KeyType=HASH \\
        AttributeName=IssueDate,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws dynamodb create-table \\
    --table-name Employee \\
    --attribute-definitions \\
        AttributeName=EmployeeID,AttributeType=N \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Department,AttributeType=S \\
        AttributeName=JoiningDate,AttributeType=S \\
    --key-schema \\
        AttributeName=EmployeeID,KeyType=HASH \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

[200~aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --table-class STANDARD~
clear
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --table-class STANDARD
aws dynamodb create-table \\
    --table-name Music \\
    --attribute-definitions \\
        AttributeName=Artist,AttributeType=S \\
        AttributeName=SongTitle,AttributeType=S \\
    --key-schema \\
        AttributeName=Artist,KeyType=HASH \\
        AttributeName=SongTitle,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws dynamodb put-item \\
    --table-name Music  \\
    --item \\
        '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}'\
\
aws dynamodb put-item \\
    --table-name Music  \\
    --item \\
        '{"Artist": {"S": "KLM"}, "SongTitle": {"S": "HIJ"}}'\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item \\
        '{"Artist": {"S": "ABC"}, "SongTitle": {"S": "EFG"}}'\
                            \
aws dynamodb put-item \\
    --table-name Music \\
    --item \\
        '{"Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}'
aws dynamodb put-item \\
    --table-name Music  \\
    --item \\
        '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}'\
\
aws dynamodb put-item \\
    --table-name Music  \\
    --item \\
        '{"Artist": {"S": "KLM"}, "SongTitle": {"S": "HIJ"}}'\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item \\
        '{"Artist": {"S": "ABC"}, "SongTitle": {"S": "EFG"}}'\
                            \
aws dynamodb put-item \\
    --table-name Music \\
    --item \\
        '{"Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' --region ap-south-1 \ 
aws dynamodb put-item \\
    --table-name Music  \\
    --item \\
        '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}'\
\
aws dynamodb put-item \\
    --table-name Music  \\
    --item \\
        '{"Artist": {"S": "KLM"}, "SongTitle": {"S": "HIJ"}}'\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item \\
        '{"Artist": {"S": "ABC"}, "SongTitle": {"S": "EFG"}}'\
                            \
aws dynamodb put-item \\
    --table-name Music \\
    --item \\
        '{"Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' --region ap-south-1
nmtui
./Obsidian-1.4.14.AppImage
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}' \\
    --region your-region\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "KLM"}, "SongTitle": {"S": "HIJ"}}' \\
    --region your-region\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "ABC"}, "SongTitle": {"S": "EFG"}}' \\
    --region your-region\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' \\
    --region ap-south-1\

aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}' \\
    --region ap-south-1\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "KLM"}, "SongTitle": {"S": "HIJ"}}' \\
    --region ap-south-1\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "ABC"}, "SongTitle": {"S": "EFG"}}' \\
    --region ap-south-1\
\
aws dynamodb put-item \\
    --table-name Music \\
    --item '{"Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' \\
    --region ap-south-1\

aws dynamodb get-item --consistent-read \\
    --table-name Music \\
    --key '{ "Artist": {"S": "Acme Band"}, "SongTitle": {"S": "Happy Day"}}' --region ap-south-1
flameshot gui
aws dynamodb get-item --consistent-read \\
    --table-name Music \\
    --key '{ "Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' --region ap-south-1
flameshot gui
aws dynamodb update-item \\
    --table-name Music \\
    --key '{ "Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}' \\
    --update-expression "SET Artist = :newval" \\
    --expression-attribute-values '{":newval":{"S":"A R Rahman"}}' \\
    --return-values ALL_NEW --region ap-south-1
aws dynamodb update-item \\
    --table-name Music \\
    --key '{ "Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}' \\
    --update-expression "SET SongTitle = :newval" \\
    --expression-attribute-values '{":newval":{"S":"Malipoo"}}' \\
    --return-values ALL_NEW --region ap-south-1
[200~aws dynamodb update-item \\
    --table-name Music \\
    --key '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "Malipoo"}}' \\
    --update-expression "SET NewAttribute = :newVal" \\
    --expression-attribute-values '{":newVal": {"S": "NewValue"}}' \\
    --region ap-south-1
aws dynamodb update-item \\
    --table-name Music \\
    --key '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "Malipoo"}}' \\
    --update-expression "SET Writer = :newVal" \\
    --expression-attribute-values '{":newVal": {"S": "A R Rahman"}}' \\
    --region ap-south-1\

aws dynamodb get-item --consistent-read \\
    --table-name Music \\
    --key '{ "Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' --region ap-south-1
aws dynamodb get-item --consistent-read \\
    --table-name Music \\
    --key '{ "Artist": {"S": "UVW"}, "SongTitle": {"S": "Mallipoo"}}' --region ap-south-1
aws dynamodb scan --table-name Music --region ap-south-1
flameshot gui
[200~aws dynamodb delete-item \\
    --table-name Music \\
    --key '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "Malipoo"}}' \\
    --region ap-south-1
~aws dynamodb delete-item \\
    --table-name Music \\
    --key '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "Malipoo"}}' \\
    --region ap-south-1\

aws dynamodb delete-item \\
    --table-name Music \\
    --key '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "Malipoo"}}' \\
    --region ap-south-1\

java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
cd Downloads
xdg-open 19ECE204-CA-Assignment1-Template.docx
ranger
reboot
startx
redshift -P -O 3000
npm install -g http-server
sudo npm install -g http-server
http-server
cargo run
python
cargo run
lsof -i :8080\

cargo run
http-server
[200~cargo build --release
cargo build --release\

ls
./target/release/rust-mysql
cargo run --release
cd /usr/share
ls
cd tomcatn
cd ..
pkill tomcatn
pkill tomcat
ps aux | grep tomcay
ps aux | grep tomcat
kill -9 839
sudo kill -9 839
cargo run --release
sudo kill -9 839
ps aux | grep tomcat
cargo run --release
cargo run
cargo update
./target/release/rust-mysql
cargo run --release
cargo build --release
cargo run --release
cargo build --release
cargo run --release
cargo build --release
cargo run --release
cd projects
ls
wasm-pack new hello-wasm
pacman -S wasm-pack
wasm-pack new hello-wasm
wasm-pack new dbmsql
cd dbmsql
nmtui
cargo run --release
wasm-pack build --target web --out-name wasm --out-dir ./static\

rustup update stable
wasm-pack build --target web --out-name wasm --out-dir ./static\

rustup target add wasm32-unknown-unknown\

cargo build --lib --target wasm32-unknown-unknown\

startx
cargo build --lib --target wasm32-unknown-unknown\

rm -rf *
rm -rf .git*
rm -rf .*
mysql -u kelper -p
sleep 2 && flameshot gui
java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
cd DynamoDB
ls
java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
aws dynamodb delete-item \\
    --table-name Music \\
    --key '{"Artist": {"S": "UVW"}, "SongTitle": {"S": "Malipoo"}}' \\
    --region ap-south-1\

aws dynamodb get-item --consistent-read \\
    --table-name Music \\
    --key '{ "Artist": {"S": "A R Rahman"}, "SongTitle": {"S": "Mallipoo"}}' --region ap-south-1
flameshot gui
aws dynamodb update-item \\
    --table-name Music \\
    --key '{ "Artist": {"S": "UVW"}, "SongTitle": {"S": "NOP"}}' \\
    --update-expression "SET Artist = :newval" \\
    --expression-attribute-values '{":newval":{"S":"A R Rahman"}}' \\
    --return-values ALL_NEW --region ap-south-1
aws dynamodb create-table \\
    --table-name Employee \\
    --attribute-definitions \\
        AttributeName=EmployeeID,AttributeType=N \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Department,AttributeType=S \\
        AttributeName=JoiningDate,AttributeType=S \\
    --key-schema \\
        AttributeName=EmployeeID,KeyType=HASH \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

nvim
aws dynamodb create-table \\
    --table-name Employee \\
    --attribute-definitions \\
        AttributeName=EmployeeID,AttributeType=N \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Department,AttributeType=S \\
        AttributeName=JoiningDate,AttributeType=S \\
    --key-schema \\
        AttributeName=EmployeeID,KeyType=HASH \\
        AttributeName=Name,KeyType=NONE \\
        AttributeName=Department,KeyType=NONE \\
        AttributeName=JoiningDate,KeyType=NONE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

aws dynamodb create-table \\
    --table-name Employee \\
    --attribute-definitions \\
        AttributeName=EmployeeID,AttributeType=N \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Department,AttributeType=S \\
        AttributeName=JoiningDate,AttributeType=S \\
    --key-schema \\
        AttributeName=EmployeeID,KeyType=HASH \\
        AttributeName=Name,KeyType=RANGE \\
        AttributeName=Department,KeyType=RANGE \\
        AttributeName=JoiningDate,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

nmtui
reboot
startx
nmtui
lla
ll -a
flameshot gui
OA
flameshot gui
sleep 2 && flameshot gui
nmtui
cd Downloads
ls
xdg-open 19ECE204-CA-Assignment1-Template.docx
nmtui
startx
omz update
cd clg/AdP/C/cpp
mkdir STL-1
cd STL-1
ls
nvim main.c
nvim main.cpp
g++ main.cpp
q
x
exit
g++ main.cpp
exit
g++ main.cpp
./a.out
cd Downloads
ls
xdg-open 19ECE204-CA-Assignment1-Template\(1\).docx
brightnessctl set 50%
cd DynamoDB
l
java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb
aws dynamodb create-table \\
    --table-name Employee \\
    --attribute-definitions \\
        AttributeName=EmployeeID,AttributeType=N \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Department,AttributeType=S \\
        AttributeName=JoiningDate,AttributeType=S \\
    --key-schema \\
        AttributeName=EmployeeID,KeyType=HASH \\
        AttributeName=Name,KeyType=RANGE \\
        AttributeName=Department,KeyType=RANGE \\
        AttributeName=JoiningDate,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

nmtui
nm-connection-editor
nm-applet
nm-online
nm-applet
nmtui
aws dynamodb create-table \\
    --table-name Employee \\
    --attribute-definitions \\
        AttributeName=EmployeeID,AttributeType=N \\
        AttributeName=Name,AttributeType=S \\
        AttributeName=Department,AttributeType=S \\
        AttributeName=JoiningDate,AttributeType=S \\
    --key-schema \\
        AttributeName=EmployeeID,KeyType=HASH \\
        AttributeName=Name,KeyType=RANGE \\
        AttributeName=Department,KeyType=RANGE \\
        AttributeName=JoiningDate,KeyType=RANGE \\
    --provisioned-throughput \\
        ReadCapacityUnits=5,WriteCapacityUnits=5 \\
    --region ap-south-1 \\
    --table-class STANDARD\

ls
la
cd .aws
ls
la
nvim credentials
brightnessctl set 100%
nmtui
nvim
nmtui
nvim
nmtui
brightnessctl 1%
brightnessctl s 1%
c
C
nvim c.c
gcc c.c
exit
gcc c.c
nmtui
reboot
startx
btop
pacman -Qe
pacman -Rns tmux starship snapd siji scrot rsync php* nano mupdf-gl vim vi mongodb-bin mongosh-bin drawio-desktop dmenu chatgpt-shell-cli
pacman -Rns tmux starship snapd siji scrot rsync php-apache php php-cgi php-embed php-fpm php-gd php-igbinary php-redis php-snmp phpmyadmin nano mupdf-gl vim vi mongodb-bin mongosh-bin drawio-desktop dmenu chatgpt-shell-cli
pacman -Rns tmux starship snapd siji-git scrot rsync php-apache php php-cgi php-embed php-fpm php-gd php-igbinary php-redis php-snmp phpmyadmin nano mupdf-gl vim vi mongodb-bin mongosh-bin drawio-desktop dmenu chatgpt-shell-cli
pacman -Rns composer
pacman -Rns tmux starship snapd siji-git scrot rsync php-apache php php-cgi php-embed php-fpm php-gd php-igbinary php-redis php-snmp phpmyadmin nano mupdf-gl vim vi mongodb-bin mongosh-bin drawio-desktop dmenu chatgpt-shell-cli
pacman -Syu
btop
ls
rm -rf BookTUI go snap zathura DaVinci Deskreen-2.0.4.AppImage intelephense 
ls
btop
nvim Obsidian
pacman -Sc
pacman -Scc
pacman -Qtdq
pacman -Rns winetricks-git go 
du -sh ~/.cache
sudo du -sh ~/.cache
cd .cache
ls
cd ..
rm -rf ~/.cache/*
ls
cd .config
ls
pacman -Rns kdenlive
ls
du -sh
du -s
du -r
rm -rf nvim.* sxhkd.bak.bak neofetch.bak kdenlive* github-copilot draw.io composer bspwm.bak.bak bspwm_rice 
sudo rm -rf nvim.* sxhkd.bak.bak neofetch.bak kdenlive* github-copilot draw.io composer bspwm.bak.bak bspwm_rice 
ls
sudo journalctl --vacuum-size=50M
cd /
lsblk -f
cd
ls
la
du -h
du -h --max-depth=1
du -h --max-depth=1 | grep G
cd projects
du -h --max-depth=1 | grep G
cd sql-rust
du -h --max-depth=1 | grep G
cd target
ls
du -h --max-depth=1 | grep G
cd ..
rm -rf sql-rust
ls
cd ..
ls
du -h --max-depth=1 | grep G
cd .local
ls
du -h --max-depth=1 | grep G
cd share
du -h --max-depth=1 | grep G
cd nvim
ls
du -h --max-depth=1 | grep G
cd mason
du -h --max-depth=1 | grep G
cd packages
ls
du -h --max-depth=1 | grep G
nvim
cd
du -h --max-depth=1 | grep G
cd .docker
ls
du -h --max-depth=1 | grep G
cd desktop
ls
cd desktop
du -h --max-depth=1 | grep G
cd vms
ls
cd 0
ls
du -h --max-depth=1 | grep G
cd data
ls
rm -rf Docker.raw
reboot
startx
yay -S bspwm sxhkd rofi kitty picom-ibhagwan-git calcurse todotxt \\
 feh jq dunst betterlockscreen brightnessctl playerctl maim \\
 xclip imagemagick\

asldkf
sadflk
as;ldfkj
git clone https://github.com/rxyhn/tokyo.git
cd tokyo
ranger
cd tokyo
mkdir -p $HOME/.config/ && cp -r ./config/* $HOME/.config/\

cp -r ./bin/* $HOME/.local/bin/
cp -r ./misc/* $HOME/
tokyo
ls
nvim README.md
cd bin
ls
dww
eww
nvim eww
pacman -Sy
eww
cd .local/bin
ls
./eww
./eww daemon
./eww open xfetch
./xfetch
s
ls
./borders
cd tokyo
ls
cd bin
ls
./dashboard
clear
./dashboard
ls
./launcher
./volume
./brightness
./notificationcenter
./takeshot
./xcolor-pick
pkill eww
pkill eww*
ps aux
ps aux | grep border
kill 40636
kill 6944
ps aux | grep border
kill 40691
ps aux | grep border
curl https://raw.githubusercontent.com/gh0stzk/dotfiles/master/RiceInstaller -o $HOME/RiceInstaller
git clone https://github.com/gh0stzk/dotfiles.git
chmod +x RiceInstaller
cd do
cd dotfiles
ls
chmod +x RiceInstaller
./RiceInstaller
ls
s
ls
cd .config
ls
cd
ls
cd .RiceBackup
ls
cd alacritty_20231217-001803
ls
cd ..
ls
mv alacritty_20231217-001803 ~/.config/alacritty
ls
cd
cd .config
ls
cd alacritty
ls
asf
git clone https://github.com/gh0stzk/dotfiles.git
cd dotfiles
ls
chmod +x RiceInstaller
./RiceInstaller
ls
la
ll
cd bak
ls
ls -a
cat .zshrc.bak
cp .zshrc.bak ~/.zshrc
source .shrc
source .zshrc
cd
source .zshrc
clear
l
cd /etc/X11/xinit/xinitrc.d
ls
cd ..
ls
cat xinitrc
cat xinitrc
sudo nvim xinitrc
startx
exec bspwm
exec bspwm
exec bspwm
export DISPLAY=:0
exec bspwm
cd /etc/X11/xinit/
ls
cp xinitrc ~/.xinitrc
cd ~
ls
ls -a
nvim .xinitrc
startx
nvim .xinitrc
startx
nvim ~/.xinitrc
startx
cd .config
ls
cd bspwm.bak.bak
cd 
cd .RiceBackup
ls
mv bspwm_20231217-001803 ~/.config/bspwm
cd .config
ls
cd
cd .config
ls
cd bspwm
ls
nvim bspwmrc
ls
cd ..
cd bspwm.bak.bak
ls
nvim bspwmrc
ls
cd ..
ls
cd bspwm
ls
cd bin
ls
cd
cd tokyo
ls
cd config
ls
cd
ls -a
exec bspwm
startx
clear
bspwm
export DISPLAY=:0
bspwm
ls -a
xrandr
xrandr --listactivemonitors
xrandr --listactivemonitors
xrandr --display
xrandr --display :0
cd .config
ls
cd bspwm
ls
nvim bspwmrc
ls
cd ..
ls
rm -rf bspwm
cp bspwm.bak.bak bspwm
cp -r bspwm.bak.bak bspwm
ls
cd bspwm
ls
nvim bspwmrc
bspc monitor -d
bspc monitor
cd /etc/X11/xinit
ls
nvim xinitrc
sudo nvim xinitrc
bspc monitor -d
bspc monitor
bspc monitor north
bspc monitor north.focused
xrandr
export DISPLAY=HDMI-1
xrandr
export DISPLAY=kelper:0 
xrandr
xrandr --output HDMI-1 --mode 1920x1080
xrandr --output
xrandr --output HDMI-1 -auto
xrandr --output HDMI-1 --auto
xrandr -d kelper:0 
xrandr -display :0.0 --output HDMI-0 --mode 1920x1080 --rate 60
video
$video
cd /boot
ls
sudo xrandr
bash sudo xrandr'
bash sudo xrandr
sudo pacman -Syu
ping google.com
nmtui
ping google.com
sudo pacman -Syu
xrandr
cd /etc
ls
cd X11
ls
cd xorg.conf.d
ls
startx
exec bspw,
exec
exec bspwm
bspwm
$DISPLAY
xrandr
sudo pacman -S xorg
xrandr
systemctl start xorg
pacman -S xorg-xinit
sudo pacman -S xorg-xinit
startx
startx
xrandr
cd var
cd /var
ls
cd log
ls
cat Xorg.0.log
ls
less Xorg.0.log
less Xorg.0.log
cd ~
ls
nvim .xinitrc
twmm
twm
twm
which twm
which xorg-twm
sudo pacman -S xorg-twm
nvim .xinitrc
startx
pacman -Qw
pacman -Qr
pacman -Qe
ls
cd /
ls
lsblk
cd
ls
lsblk
mkdir hd
mount ~/hd sda1
sudo mount ~/hd sda1
mount /mnt/win sda1
sudo mount /mnt/win sda1
sudo mount /mnt/win /dev/sda1
reboot
ls
startx
pacman -Rs xorg
_ pacman -Rs xorg
sudo pacman -R xorg
sudo pacman -Rns xorg-server
sudo pacman -Rns xorg
man pacman
sudo pacman -Rdd xorg
sudo apt update
sudo pacman -Syy
sudo pacman -Syu
sudo pacman -Syu
sudo pacman -Sy xorg
systemctl enable gdm.service
sudo pacman -Sy xorg-xinit 
ls
cp /etc/X11/xinit/xinitrc ~/.xinitrc
ls -a
nvim .xinitrc
chmod +x .xinitrc
startx]
startx
cd /etc
ls
sudo rm -rf X11
ls
sudo pacman -rdd xorg
sudo pacman -Rdd xorg
pacman -Sy xorg
sudo pacman -Sy xorg
ls
cd X11
cd
ls -a
ls
ls -a
rm .xinitrc
cd /etc/
cd X11
ls
cd xorg.conf.d
ls
ls
ls
startx
cd /usr
cd share
ls
cd X11
ls
cd xorg.conf.d
ls
cd ..
sudo pacman -Syu 
cd
startx
cd /etc/X11
ls
ls -R
cd ..
cd skel
ls
ls -a
cd ..
ls
cd X11
ls
cd .local/share/
cd
cd .local/share
ls
cd xorg
ls
nvim Xorg.0.log
clear
cd
ls
ls -a
cd /etc
ls
cd X11
ls
cd xorg.conf.d
ls
ls
ls
cd ..
mkdir xinit
sudo mkdir xinit
cd xinit
ls
touch .xinitrc
sudo touch .xinitrc
nvim .xinitrc
cd /usr/share
ls
cd X11
ls
cd locale
ls
cd ..
ls
cd xorg.conf.d
ls
nvim 70-synaptics.conf
sudo X -configure
cd ..
ls
cd ..
cd xinit
zypper
pacman -S zypper
sudo pacman -S zypper
Xorg :0 -configure
pacman -S base
sudo pacman -S base
cd
cd /etc
ls
cd X11
ls
cd xinit
ls
cd ..
cd xinit
ls -a
nvim .xinitrc
cd ..
rm -rf xinit
sudo rm -rf xinit
ls
cd
sudo X -configure
ls
reboot
fdisk -l
sudo fdisk -l
ls
git init
git add .
ls
rm Obsidian*
rm a.out
cat apt
rm apt
rm bg.png c.c imp.py new.py test.py 
cat xorg.conf.new
ls
rm CB.EN.U4CSE22033.odt 22033_PR.odt AP-weightage
ls
rm xorg.conf.new
cd test
ls
cd ..
rm test tokyo frama-c DynamoDB Blowfish 
rm -rf test tokyo frama-c DynamoDB Blowfish 
sudo rm -rf test tokyo frama-c DynamoDB Blowfish 
ls
rm -rf docker-source
ls
rm -rf Rust-lrng
ls
git add .
ls
ls -a
cd Ri
cd .RiceBackup
ls
cd ..
ls
ls -a
rm -rf .aws .cache .fehbg .java .mozilla .opam .oh-my-zsh .w3m  .zcompdump* .yarn* .location.txt  
ls
ls -a
git add .
rm -rf backend-rust
git add .
cd projects
ls
rm groceries
rm -rf groceries
cd ..
git add .
cd projects
ls 
cd hello-wasm
ls
cd ..
rm -rf hello-wasm
cd linkedin-automation
git status
ls -
ls -a
rm .git
rm -rf .git
ls
git status
cd ..
cd ..
cd ..
cd
ls
git add .
git status
git commit -m "backup"
git push
git remote add backup 
restart
reboot
reboot
