exit()
import pyautogui
exit()\
import pyautogui
pyautogui.size()
pyautogui.position()
element_location = pyautogui.locateOnScreen('element.png')
element_location = pyautogui.locateOnScreen('~/Picture/Screenshots/connect.png')
element_location = pyautogui.locateOnScreen('/home/kelper/Picture/Screenshots/connect.png')
from PIL import image
from PIL import Image
element_location = pyautogui.locateOnScreen('/home/kelper/Pictures/Screenshots/connect.png')
element_location
pyautogui.locateOnScreen('/home/kelper/Pictures/Screenshots/connect.png')
pyautogui.position()
246-143
pyautogui.position()
507-533
pyautogui.locateOnScreen('/home/kelper/Downloads/connect.png')
pyautogui.locateOnScreen('/home/kelper/Downloads/connect.jpg')
pyautogui.locateOnScreen('/home/kelper/Pictures/Screenshots/connect.png')
128 + (46//2)
495 + (127//2)
pyautogui.locateOnScreen('/home/kelper/Pictures/Screenshots/connect.png')
box = !!
box = pyautogui.locateOnScreen('/home/kelper/Pictures/Screenshots/connect.png')
box
box.left
box.top
box.width
box.height
128 + (127//2)
495 + (46//2)
pyautogui.click(191,518)
exit()
import pyautogui
pyautogui.hotkey('ctrl', 'c')
pyautogui.hotkey('ctrl', 'w')
exit()
pyautogui.hotkey('ctrl', 'tab')
box = pyautogui.locateOnScreen('connect.png')
import pyautogui
box = pyautogui.locateOnScreen('connect.png')
box
box = pyautogui.locateOnScreen('connect.png')
import pyautogui
box = pyautogui.locateOnScreen('connect.png')
type(box)
box.left
import pyautogui
box = pyautogui.locateOnScreen('connect.png')
box
print(box)
box = pyautogui.locateOnScreen('add_a_note.png')
box
print(box)
box.left
import pyautogui
pyautogui.position()
box = pyautogui.locateOnScreen('add_a_note.png')
import opencv
import cv2
import pyautogui as pyg
pyg.position
pyg.position()
pyg.click(157,375)
pyg.position()
pyg.doubleclick(238,252)
pyg.doubleClick(238,252)
pyg.hotkey("ctrl", "c")
import time
if true:
	sleep(2)
	pyg.hotkey("ctrl", "c")
if true:
pyg.click(157,375)
if true:
	pyg.click(157,375)
	pyg.doubleClick(238,252)
	pyg.hotkey("ctrl", "c")
if True:
	pyg.click(157,375)
	pyg.doubleClick(238,252)
	pyg.hotkey("ctrl", "c")
if True:
	pyg.click(157,375)
	time.sleep(1)
	pyg.doubleClick(238,252)
	pyg.hotkey("ctrl", "c")
import pyautogui as pyg
import time as t
t.sleep(2
pyg.press('esc)
pyg.press('esc')
	
pyg.press('esc')
time.sleep(2)
t.sleep(2)
import pyautogui as pyg
	pyg.doubleClick(238,252)
pyg.doubleClick(238,252)
pyg.hotkey("ctrl","v")
pyg.hotkey("ctrl","shift","v")
import pyautogui
pyautogui.position()
import pyautogui as pyg
import pyautogui
import pyautogui as pyg
pyg.position
pyg.position()
import pyautogui as py
pyg.position()
py.position()
py.doubleClick(237,249)
import pyautogui as py
py.position()
exit
exit()
import pyautogui
exit
import pyautogui as pyg
pyg.position()
exit()
6000 * 50000 * 120
36,000,000,000
t = 53,200,100,100
t
a,b = 10
import pyautogui as pyg
pyg.position()
import time
import pyautogui as pyg
pyg.doubleClick(683, 787)
import random
random.randint()
random.random()
exit()
16056096 // 1024
(16056096 // 1024) // 1024
exit()
for i in range(1,10):
    date += 1
    month = random.randint(8,11)
    date_ = random.randint(1,30)
    for j in range(0,4):
        for k in range(0,4):
            occupants = random.randint(1,8)
            consumption = ((1 + round(random.random(), 5)) * 110) * occupants * 30
            flag = True
            n = random.randint(1,10)
            if n<=2:
                flag = False
            l = ["B{}-{}0{}".format(i,j,k), o ,consumption, "SGCCID-{}".format(count_), ]
            rows.append(l)
            count += 1
            count_ += 1
/bin/python /home/kelper/projects/sql-rust/payment_data.py
exit
113 + 16
130 + 16
/bin/python /home/kelper/projects/sql-rust/payment_data.py
54 / 208
1500 * 1.25
1/3600
